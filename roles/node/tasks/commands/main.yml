---
- name: Include the specific network's vars file
  ansible.builtin.include_vars:
    file: roles/node/defaults/main.yml

- name: Include the specific network's vars file
  ansible.builtin.include_vars:
    file: roles/node/vars/{{ env }}/{{ project }}.yml

- name: Manage keys
  vars:
    key_name: wallet
  block:
    - name: List Keys
      ansible.builtin.expect:
        command: "{{ node_bin_dir }}/{{ service_identifier }} keys list --home {{ node_home_dir }} --output text"
        responses:
          "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      register: existing_key_list

    - name: Add key
      ansible.builtin.expect:
        command: "{{ node_bin_dir }}/{{ service_identifier }} keys add {{ key_name }} --home {{ node_home_dir }} --recover"
        responses:
          "Enter your bip39 mnemonic": "{{ lookup('env', 'MNEMONIC') }}\n"
          "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
          "Re-enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      when: key_name not in existing_key_list.stdout

    - name: List keys
      ansible.builtin.expect:
        command: "{{ node_bin_dir }}/{{ service_identifier }} keys list --home {{ node_home_dir }} --output json"
        responses:
          "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      register: key_list

    - name: Extract and parse key addresses
      ansible.builtin.debug:
        msg: >
          {{
            key_list.stdout |
            regex_replace('^Enter keyring passphrase.*:\r\n', '') |
            regex_replace('\\\\"', '"') |
            default('[]') |
            from_json |
            map('dict2items') |
            map('selectattr', 'key', 'ne', 'pubkey') |
            map('items2dict') |
            list
          }}

    - name: Include unjail command
      ansible.builtin.import_tasks: unjail.yml
      when: command is defined and command == "unjail"

    - name: Include create validator command
      ansible.builtin.import_tasks: create_validator.yml
      when: command is defined and command == "create_validator"

    - name: Include withdraw rewards command
      ansible.builtin.import_tasks: withdraw_rewards.yml
      when: command is defined and command == "withdraw_rewards"

  always:
    - name: Delete key
      ansible.builtin.expect:
        command: "{{ node_bin_dir }}/{{ service_identifier }} keys delete {{ key_name }} --home {{ node_home_dir }} -y"
        responses:
          "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      register: delete_key_output
      changed_when: "'Key deleted forever' in delete_key_output.stdout"
      when: 
       - key_name in key_list.stdout
       - project != "paloma"
