---
- name: Withdraw validator rewards
  block:
    - name: Get validator address
      ansible.builtin.expect:
        command: >
          {{ node_bin_dir }}/{{ service_identifier }} keys show {{ key_name }} --bech val --output json --home {{ node_home_dir }}
        responses:
          "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      register: validator_status

    - name: Debug raw output
      ansible.builtin.debug:
        msg: "{{ validator_status.stdout }}"

    - name: Extract validator address
      ansible.builtin.set_fact:
        validator: "{{ validator_status.stdout.split('\n')[-1] | from_json | json_query('address') }}"

    - name: Show the final validator
      ansible.builtin.debug:
        msg: "Validator address is: {{ validator }}"

    - name: Withdraw rewards
      ansible.builtin.expect:
        command: >
          {{ node_bin_dir }}/{{ service_identifier }} tx distribution withdraw-rewards {{ validator }}
          --commission
          --yes
          --from {{ key_name }}
          --chain-id {{ vars[project].chain_id }}
          --home {{ node_home_dir }}
          --node tcp://localhost:{{ rpc_port }}
          --output text
          --gas-prices {{ node_network_params.gas_price }}{{ node_network_params.denom }}
          --keyring-dir {{ node_home_dir }}
          --sign-mode direct
        responses:
          "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      register: withdraw_output

    - name: Print withdrawal result
      ansible.builtin.debug:
        msg: "{{ withdraw_output.stdout }}"

    - name: Extract 'code'
      ansible.builtin.set_fact:
        tx_code: "{{ withdraw_output.stdout | regex_search('(?m)^code:\\s*([0-9]+)', '\\1') | default('') }}"

    - name: Extract 'txhash'
      ansible.builtin.set_fact:
        tx_hash: "{{ withdraw_output.stdout | regex_search('(?m)^txhash:\\s*([A-Z0-9]+)', '\\1') | default('') }}"

#    - name: Extract 'raw_log' before 'timestamp'
#      ansible.builtin.set_fact:
#        raw_log: >-
#          {{
#            withdraw_output.stdout
#            | regex_replace('\r', '\n')
#            | regex_search('(?sm)raw_log:\\s*(.*?)(?=^timestamp:)', '\\1')
#            | default('')
#          }}

# todo: add raw log to output
# todo: also command status should depend upon code, a non zero code and task should be shown failed in ansible
#    - name: Extract raw_log (keeping quotes)
#      ansible.builtin.set_fact:
#        tx_raw_log: >-
#          {{
#            withdraw_output.stdout
#            | regex_replace('\r','')
#            | regex_search('(?m)^\\s*raw_log:\\s*(.*)', '\\1')
#            | default('')
#          }}

    - name: Debug parsed output
      ansible.builtin.debug:
        msg:
          - "Code: {{ tx_code }}"
          - "Hash: {{ tx_hash }}"
#          - "Raw Log: {{ raw_log }}"
