---
# todo: add key name as a playbook variable in one place
# todo: maybe store LD_LIBRARY_PATH and see if it works
# todo: remove pubkey from the output
# todo: Delete key should happen even if the command doesnt go through

- name: Include the specific network's vars file
  ansible.builtin.include_vars:
    file: roles/node/defaults/main.yml

- name: Include the specific network's vars file
  ansible.builtin.include_vars:
    file: roles/node/vars/{{ env }}/{{ project }}.yml

- name: List Keys
  ansible.builtin.expect:
    command: "{{ node_bin_dir }}/{{ service_identifier }} keys list --home {{ node_home_dir }} --output text"
    responses:
      "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
  register: existing_key_list
  environment:
    LD_LIBRARY_PATH: "{{ node_lib_dir }}"


- name: Add key
  ansible.builtin.expect:
    command: "{{ node_bin_dir }}/{{ service_identifier }} keys add demo --home {{ node_home_dir }} --recover"
    responses:
      "Enter your bip39 mnemonic": "{{ lookup('env', 'MNEMONIC') }}\n"
      "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
      "Re-enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
  when: "'demo' not in existing_key_list.stdout"
  environment:
    LD_LIBRARY_PATH: "{{ node_lib_dir }}"

- name: List keys
  ansible.builtin.expect:
    command: "{{ node_bin_dir }}/{{ service_identifier }} keys list --home {{ node_home_dir }} --output json"
    responses:
      "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
  register: key_list
  environment:
    LD_LIBRARY_PATH: "{{ node_lib_dir }}"


- name: Extract and parse key addresses
  ansible.builtin.debug:
    msg: >
      {{
        key_list.stdout
        | regex_replace('^Enter keyring passphrase.*:\r\n', '')
        | regex_replace('\\\\"', '"')
        | default('[]')
        | from_json
      }}

- name: Execute unjail transaction
  ansible.builtin.expect:
    command: >
      {{ node_bin_dir }}/{{ service_identifier }} tx slashing unjail --home {{ node_home_dir }}
      --from=demo
      --fees {{ node_network_params.fee }}{{ node_network_params.denom }} --chain-id {{ vars[project].chain_id }} --yes
      --gas auto --gas-adjustment {{ node_network_params.gas }}
      --node tcp://localhost:{{ rpc_port}}
      --output text
      --keyring-dir {{ node_home_dir }}
      --sign-mode direct
    responses:
      "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
  register: unjail_output
  environment:
    LD_LIBRARY_PATH: "{{ node_lib_dir }}"

- name: Print unjail transaction result
  ansible.builtin.debug:
    msg: "{{ unjail_output.stdout }}"

- name: Print hash
  ansible.builtin.debug:
    msg: "Hash: {{ unjail_output.stdout | regex_search('hash: ([a-zA-Z0-9]+)', '\\1') }}"


- name: Delete key
  ansible.builtin.expect:
    command: "{{ node_bin_dir }}/{{ service_identifier }} keys delete demo --home {{ node_home_dir }} -y"
    responses:
      "Enter keyring passphrase.*:": "{{ lookup('env', 'KEYRING_PASSWORD') }}\n"
  register: delete_key_output
  changed_when: "'Key deleted forever' in delete_key_output.stdout"
  when: "'demo' in key_list.stdout"
  environment:
    LD_LIBRARY_PATH: "{{ node_lib_dir }}"
